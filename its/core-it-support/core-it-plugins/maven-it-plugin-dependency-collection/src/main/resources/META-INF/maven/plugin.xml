<?xml version="1.0" encoding="UTF-8"?>
<plugin>
  <description>A test plugin that provides several goals which employ @requiresDependencyCollection with different scopes. If
    desired, the resulting artifact identifiers can be written to a text file.</description>
  <groupId>org.apache.maven.its.plugins</groupId>
  <artifactId>maven-it-plugin-dependency-collection</artifactId>
  <version>2.1-SNAPSHOT</version>
  <goalPrefix>itdependency-collection</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>compile</goal>
      <description>Creates text files that list the dependencies with scope compile in the order returned from the Maven core.</description>
      <requiresDependencyCollection>compile</requiresDependencyCollection>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugin.coreit.CompileMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>compileArtifacts</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the output file for the compile artifacts, relative to the project base directory. Each line of this
UTF-8 encoded file specifies an artifact identifier. If not specified, the artifact list will not be written to
disk.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project.</description>
        </parameter>
        <parameter>
          <name>projectArtifacts</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the output file for the project artifacts, relative to the project base directory. Each line of this
UTF-8 encoded file specifies an artifact identifier. If not specified, the artifact list will not be written to
disk. Unlike the compile artifacts, the collection of project artifacts additionally contains those artifacts
that do not contribute to the class path.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <compileArtifacts implementation="java.lang.String">${depres.compileArtifacts}</compileArtifacts>
        <projectArtifacts implementation="java.lang.String">${depres.projectArtifacts}</projectArtifacts>
      </configuration>
    </mojo>
    <mojo>
      <goal>aggregate-test</goal>
      <description>Combines dependency collection with aggregation. The path parameters of this mojo support the token
&lt;code&gt;&amp;#64;artifactId&amp;#64;&lt;/code&gt; to dynamically adjust the output file for each project in the reactor whose
dependencies are dumped.</description>
      <requiresDependencyCollection>test</requiresDependencyCollection>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>true</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugin.coreit.AggregateTestMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project.</description>
        </parameter>
        <parameter>
          <name>projectArtifacts</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the output file for the project artifacts, relative to the project base directory. Each line of this
UTF-8 encoded file specifies an artifact identifier. If not specified, the artifact list will not be written to
disk. Unlike the test artifacts, the collection of project artifacts additionally contains those artifacts that
do not contribute to the class path.</description>
        </parameter>
        <parameter>
          <name>reactorProjects</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description>The Maven projects in the reactor.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <projectArtifacts implementation="java.lang.String">${depres.projectArtifacts}</projectArtifacts>
        <reactorProjects implementation="java.util.List" default-value="${reactorProjects}"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>test</goal>
      <description>Creates text files that list the dependencies with scope test in the order returned from the Maven core.</description>
      <requiresDependencyCollection>test</requiresDependencyCollection>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugin.coreit.TestMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project.</description>
        </parameter>
        <parameter>
          <name>projectArtifacts</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the output file for the project artifacts, relative to the project base directory. Each line of this
UTF-8 encoded file specifies an artifact identifier. If not specified, the artifact list will not be written to
disk. Unlike the test artifacts, the collection of project artifacts additionally contains those artifacts that
do not contribute to the class path.</description>
        </parameter>
        <parameter>
          <name>testArtifacts</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the output file for the test artifacts, relative to the project base directory. Each line of this
UTF-8 encoded file specifies an artifact identifier. If not specified, the artifact list will not be written to
disk.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <projectArtifacts implementation="java.lang.String">${depres.projectArtifacts}</projectArtifacts>
        <testArtifacts implementation="java.lang.String">${depres.testArtifacts}</testArtifacts>
      </configuration>
    </mojo>
    <mojo>
      <goal>runtime</goal>
      <description>Creates text files that list the dependencies with scope runtime in the order returned from the Maven core.</description>
      <requiresDependencyCollection>runtime</requiresDependencyCollection>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugin.coreit.RuntimeMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project.</description>
        </parameter>
        <parameter>
          <name>projectArtifacts</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the output file for the project artifacts, relative to the project base directory. Each line of this
UTF-8 encoded file specifies an artifact identifier. If not specified, the artifact list will not be written to
disk. Unlike the runtime artifacts, the collection of project artifacts additionally contains those artifacts
that do not contribute to the class path.</description>
        </parameter>
        <parameter>
          <name>runtimeArtifacts</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the output file for the runtime artifacts, relative to the project base directory. Each line of this
UTF-8 encoded file specifies an artifact identifier. If not specified, the artifact list will not be written to
disk.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <projectArtifacts implementation="java.lang.String">${depres.projectArtifacts}</projectArtifacts>
        <runtimeArtifacts implementation="java.lang.String">${depres.runtimeArtifacts}</runtimeArtifacts>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-8</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <type>jar</type>
      <version>3.8.1</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1-alpha-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-alpha-5</version>
    </dependency>
  </dependencies>
</plugin>